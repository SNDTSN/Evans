/*---------------------------------------------------------------------
	간이 표기법 변환 엔진 「아야리리스/EX」 korean ver. 140108
	
	표기법 (앞부분의 식별문자는 커스텀 가능)
	
	리리스02:머어엉~
	시바12:(머어엉|꾸벅꾸벅|음냐음냐)~
	시바숨:어디로 갔을까~?
	함께:파루스!
	리리스03「이렇게도 쓸 수 있어요」
	
	대기없음리리스05: //\w3　「바로」도 가능
	대기제로리리스06: //웨이트 0.　「대기0」도 가능
	대기많이리리스08: //\w9 x 4　「대기8」도 가능
	개행없음리리스02: //줄을 띄우지 않음. 「이어서」「개행안함」도 가능
	클릭대기리리스04: //\x
	개행전리리스03: //개행, 웨이트 전에 표정을 바꿈
	
	(사용자)님! // (사용자)로 사용자 이름을 출력할 수 있습니다.
	
	#이건 코멘트입니다.
	
	@설정:패시브모드
	@설정:퀵섹션
	@설정:타임아웃1000「타임아웃」 //<- 단위는 밀리초. 타임아웃, 을 호출
	@설정:변수|테스트변수1|배고파요 // 테스트변수1 이라는 변수에 "배고파요"라는 값을 저장
	
	//|로 구분된 부분 - 첫번째는 표시 문자열, 그 뒤로는 이벤트명과 그 추가 정보
	//이벤트명 = 함수명이 될 경우가 있음
	//  ・아야리리스 환경 전부, OnChoiceSelect에 EVAL로 수정, On으로 시작하는 문자열
	@메뉴:샘플1｜Sample1Execute
	@반쪽메뉴:샘플2｜샘플2실행
	@개행많이메뉴:샘플3｜OnTest3Exec｜R0
	@클릭대기메뉴:샘플4｜샘플4실행 //이 직후에 클릭대기(\x) 실행
	
	토크는 전부
	<<"
	리리스02:테스트!
	">>
	와 같이 감쌀 것(AYA 복수행 표기법)
	
	랜덤토크일 경우에만
	<<'
	시바10:테스트네.
	'>>
	와 같이 작은따옴표로 표기해 주세요. (고속화 처리를 위해서)
	
	보조함수 (평상시에는 수정 불필요)
	아야리리스EXSurfaceTranslate(?측,서피스 번호)
	 -> 서피스 번호 반환
	아야리리스EXSakuraScript외부트랜스레이터(스크립트)
	 -> 반환값 변환 후 스크립트
	
---------------------------------------------------------------------*/

//---- 아야리리스 EX 초기화 --------------------------------------------------------------
OnSystemLoad.AAA_AYLEX
{
	timeout_label = ''
	entering_passive_mode = 0
	
	AYALilithEX = 1
	
	_a = GETFUNCLIST('아야리리스EX헤더')
	
	AYLex_CHAR_HEADER = IARRAY
	AYLex_CHAR_REGEX = ''
	
	AYLex_Kakko_History = IARRAY
	
	_n = ARRAYSIZE(_a)
	for _i = 0 ; _i < _n ; _i++ {
		_side = TOINT(ZEN2HAN(REPLACE(_a[_i],'아야리리스EX헤더','')))
		_var = EVAL(_a[_i])
		
		AYLex_CHAR_HEADER[_side] = _var
		if _i > 0 {
			AYLex_CHAR_REGEX += '|'
		}
		AYLex_CHAR_REGEX += _var
	}
	
	AYLex_DEFAULT_SURFACE = (0,10)
	
	_a = GETFUNCLIST('아야리리스EX표준표정')
	
	_n = ARRAYSIZE(_a)
	for _i = 0 ; _i < _n ; _i++ {
		_side = TOINT(ZEN2HAN(REPLACE(_a[_i],'아야리리스EX표준표정','')))
		_var = TOINT(EVAL(_a[_i]))
		
		AYLex_DEFAULT_SURFACE[_side] = _var
	}
	
	
	AYLex_SakuraScript_Wait_Insert = 0
	if ISFUNC('아야리리스EXSakuraScript문웨이트지원') {
		AYLex_SakuraScript_Wait_Insert = 아야리리스EXSakuraScript문웨이트지원
	}
	
	AYLex_SakuraScript_External_Translator = ISFUNC('아야리리스EXSakuraScript외부트랜스레이터')
}

//---- 아야리리스 EX 데이터 개방 --------------------------------------------------------------
OnSystemUnload.AAA_AYLEX
{
	ERASEVAR('AYLex_CHAR_HEADER','AYLex_CHAR_REGEX','AYLex_SakuraScript_Wait_Insert','AYLex_Kakko_History','AYLex_SakuraScript_External_Translator')
	
	ERASEVAR('timeout_label','entering_passive_mode','AYALilithEX')
}

//---- 아야리리스 EX 트렌스레이터 --------------------------------------------------------------
OnTranslateInternal.AAA_AYLEX
{
	if SUBSTR(SHIORI3FW.Eventid,0,3) == 'On_' {
		_argv[0]
		return
	}
	ProcessSpecialSyntax(_argv[0])
}

//---- 텍스트만 필터 --------------------------------------------------------------
AYALilithEX.TextOnlyTranslator
{
	_string = RE_SPLIT(_argv[0],'\\(\\|q\[.*?\]\[.*?\]|[!&8cfijmpqsn]\[.*?\]|[-*+014567bcehntuvxz]|_[ablmsuvw]\[.*?\]|__(t|[qw]\[.*?\])|_[!?+nqsV]|[sipw][0-9])')
	_n = ARRAYSIZE(_string)
	_tag = RE_GETSTR()
	_tr = ''
	_qs = 0
	
	for _i = 0 ; _i < _n ; _i++ {
		_tr += EVAL("%(_argv[1])(_string[_i],_qs)")
		_tr += _tag[_i]
		if '\_q' _in_ _tag[_i] {
			_qs = ! _qs
		}
	}
	
	_tr
}

//---- 텍스트 변환부 (구두점 웨이트) --------------------------------------------------------------
AYALilithEX.TextOnlyTranslatorFunc
{
	//_argv[0] = 치환 대상 텍스트
	//_argv[1] = 퀵섹션인가 아닌가
	
	_text = _argv[0]
	
	_text = REPLACE(_text,'‥','…')
	_text = REPLACE(_text,'...','…')
	_text = REPLACE(_text,'..','…')
	_text = RE_REPLACE(_text,'[（(](사용자*반말)[)）]',경칭삭제(username)) // 추가
	_text = RE_REPLACE(_text,'[（(](사용자*|사용자*명|사용자*님)[)）]',username)
	_text = RE_REPLACE(_text,'[（(](사쿠라)[)）]',sakuraname)
	_text = RE_REPLACE(_text,'[（(](우뉴)[)）]',keroname)
	_text = RE_REPLACE(_text,'[（(](케로)[)）]',keroname)
	_text = REPLACE(_text,'\.','\#46') // 토크에 \. 라고 표기하면 .으로 인한 웨이트 무시
	_text = RE_REPLACEEX(_text,'\.(\w{1,4})','\\#46$1') // 확장자 형식일 경우 웨이트 무시
	
	if ! _argv[1] {
		_text = RE_REPLACEEX(_text, '([,、…])(?=.)', '$1\\w5')
		_text = RE_REPLACEEX(_text, '([\.\?\!。！？」』])(?=[^\.\?\!。、！？」』])', '$1\\w9')
	}
	_text = REPLACE(_text,'\#46','.')

	_text
}

//---- 체인, 선택 --------------------------------------------------------------
ProcessSpecialSyntax
{
	_txt = _argv[0]
	
	_arr = RE_SPLIT(_txt,'\r\n[=＝]{4,}\r\n',2) //=====로 나뉘었으면 chain
	if STRLEN(_arr[1]) {
		SHIORI3FW.StartChainTalkScriptDirect(_arr[1])
	}
	
	_txt = _arr[0]
	
	_arr = RE_SPLIT(_txt,'\r\n[-―ー－]{4,}\r\n') //-----로 나뉘었으면 복수 토크 RAND 선택

	if GETTYPE(_arr) == 4 {
		_txt = _arr[RAND(ARRAYSIZE(_arr))]
	}
	else {
		_txt = _arr
	}
	
	ProcessAYALilithSyntax(_txt)
}

//---- 아야리리스 EX 표기법 서브(괄호로 감싸진 보조 표기법) --------------------------------------------------------------
ProcessAYALilithSyntaxSub
{
	_text = _argv[0]
	if TOINT(_argv[1]) == 0 {
		_text = AYALilithEX.TextOnlyTranslator(_text,'AYALilithEX.TextOnlyTranslatorFunc')
	}
	
	while RE_SEARCH(_text,'[(（](.+?[\|｜].+?|[HＨ][0-9０-９]+)[)）]') {
		_p = RE_GETPOS[0]
		_l = RE_GETLEN[0]
		_s = RE_GETSTR[1]
		
		_x = ZEN2HAN(_s)

		_text = ERASE(_text,_p,_l)

		_hist = ''
		if SUBSTR(_x,0,1) == 'H' { //이력
			_histnum = TOINT(SUBSTR(_x,1,9999))
			_hist = AYLex_Kakko_History[_histnum-1]
		}
		else {
			_hist = ANY(RE_SPLIT(_s,'[|｜]'));
		}
		_text = INSERT(_text,_p,_hist)
		AYLex_Kakko_History ,= _hist
	}
	
	_text
}

//---- 아야리리스 EX 표기법 메인 --------------------------------------------------------------
ProcessAYALilithSyntax
{
	timeout_label = ''
	AYLex_Kakko_History = IARRAY
	
	_txtarray  = IARRAY
	_txtarray ,= SPLIT(_argv[0],CHR(0xd,0xa))
	
	_script = ''
	
	_surface_translate_name = '아야리리스EXSurfaceTranslate'
	_surface_translate_found = ISFUNC(_surface_translate_name)
	
	if (ARRAYSIZE(_txtarray) <= 1) && (RE_SEARCH(_txtarray[0],'^[^\\]*(' + AYLex_CHAR_REGEX + ')[^\\]*?[｢「：:]') == 0) {
		_script = _txtarray[0]
		if AYLex_SakuraScript_Wait_Insert {
			_script = ProcessAYALilithSyntaxSub(_script,0)
		}
		else {
			_script = ProcessAYALilithSyntaxSub(_script,1)
		}
		if AYLex_SakuraScript_External_Translator {
			void EVAL('_script = 아야리리스EXSakuraScript외부트랜스레이터(_script)')
		}
		_script
		return
	}

	_init_script = ''
	_talk_init = 0
	_talk_init_side = IARRAY
	_talk_done_side = IARRAY
	_side = 0
	_side_old = 0
	_sync = 0
	_is_exit = 0
	_quick = 0
	_passive_set = 0
	_timeout_value = 0
	_kagikakko_flag = 0
	_cond_result = 0
	_last_cond_result = 0
	_else_cond_result = 0
	
	_menu_flag = 0
	_half_menu_flag = 0
	
	_n = ARRAYSIZE(_txtarray)
	for _i = 0 ; _i < _n ; _i++ {
		_txt = _txtarray[_i]
		if _txt != '' {
			_txt_exit = RE_REPLACE(_txt,'(\\w[1-9])*\\-','')
			if _txt != _txt_exit {
				_is_exit = 1
				_txt = _txt_exit
			}

			if RE_SEARCH(_txt,'^[#＃]') { //＃コメント
				; //아무 것도 안함
			}
			elseif RE_SEARCH(_txt,'^(.*?)([：:＜].+?|[｢「].+?[」｣]?)$') {
				_cmd_orig = RE_GETSTR[1]
				_txt_orig = RE_GETSTR[2]
				
				if RE_SEARCH(_txt_orig,'^[：:＜](.+)$') {
					_txt_orig = RE_GETSTR[1]
					_kagikakko_flag = 0
				}
				elseif RE_SEARCH(_txt_orig,'^[｢「](.+?)[」｣]$') {
					_txt_orig = RE_GETSTR[1]
					_kagikakko_flag = 0
				}
				elseif RE_SEARCH(_txt_orig,'^[｢「](.+?)$') {
					_txt_orig = RE_GETSTR[1]
					_kagikakko_flag = 1
				}
				
				_cmd_orig = RE_REPLACE(_cmd_orig,'【.+?】','')
				_cond = RE_GETSTR[0]
				
				_cmd_orig = RE_REPLACE(_cmd_orig,'[　 \t]','')
				
				if STRLEN(_cond) > 0 {
					if RE_SEARCH(_cond,'^【[　 \t]*직전.*?부정[　 \t]*?】$') {
						_cond_result = (_last_cond_result == 0)
					}
					elseif RE_SEARCH(_cond,'^【[　 \t]*직전.*?[　 \t]*?】$') {
						_cond_result = _last_cond_result
					}
					elseif RE_SEARCH(_cond,'^【[　 \t]*(?:그외|아니면|else)[　 \t]*?】$') {
						_cond_result = (_else_cond_result == 0)
					}
					else {
						_last_cond_result = ProcessAYALilithCondBranch(_cond)
						_cond_result = _last_cond_result
						
						if _last_cond_result {
							_else_cond_result = 1
						}
					}
				}
				else {
					_cond_result = 1
					_else_cond_result = 0
				}
				
				//조건 분기 ON이라면 GO (빈 값일 경우 포함)
				if _cond_result {
					if RE_SEARCH(_cmd_orig,'^[@＠](.*?)메뉴') { //＠메뉴：ほげほげ
						_cmd = RE_REPLACE(RE_GETSTR[1],'[　 \t]','')
						_txt = _txt_orig
						
						if _menu_flag == 0 {
							if _quick == 0 {
								_script += '\_q'
							}
							_script += '\_n'
							if TOINT(_talk_done_side[_side]) != 0 {
								_script += '\n[half]' //\n는 나중에 들어간다
							}
						}
						
						_menu_array = RE_SPLIT(_txt,'[|｜]')
						
						if '반쪽' _in_ _cmd {
							if _half_menu_flag == 0 {
								_script += 반쪽메뉴시작()
								_half_menu_flag = 1
								_script += '\n'
							}
							_script += 반쪽메뉴(_menu_array)
						}
						else {
							if _half_menu_flag {
								_script += 반쪽메뉴종료()
								_half_menu_flag = 0
							}
							else {
								if (TOINT(_talk_done_side[_side]) != 0) || (_menu_flag != 0) {
									_script += '\n'
								}
							}
							if '개행많이' _in_ _cmd || '개많' _in_ _cmd {
								_script += '\n[half]'
							}
							_script += 메뉴(_menu_array)
							if '클릭대기' _in_ _cmd {
								_talk_done_side = IARRAY
								_talk_init = 0
								_script += '\0\x'
								_side = 0
								_side_old = 0
							}
						}
						_talk_done_side[_side] = 1
						_menu_flag = 1
					}
					elseif RE_SEARCH(_cmd_orig,'^[#＃@＠]설정') { //＠설정：ほげほげ
						_txt = RE_REPLACE(_txt_orig,'[　 \t]','')
						
						if '퀵' _in_ _txt {
							if _quick == 0 {
								_quick = 1
								_script += '\_q'
							}
							else {
								_quick = 0
								_script += '\_q'
							}
						}
						else {
							if _quick != 0 {
								_quick = 0
								_script += '\_q'
							}
						}
						
						if '수동모드' _in_ _txt || '패시브모드' _in_ _txt {
							_passive_set = 1
							if entering_passive_mode == 0 {
								_script += '\![enter,passivemode]'
								entering_passive_mode = 1
							}
						}
						
						if '타임클릭' _in_ _txt {
							_script += '\t'
						}
						
						if RE_MATCH(_txt,'타임아웃([0-9０-９]*)[｢「：:](.+?)[」｣]?') {
							timeout_label = RE_GETSTR[2]
							if RE_GETSTR[1] != '' {
								_timeout_value = TOINT(ZEN2HAN(RE_GETSTR[1]))
							}
						}

						if RE_MATCH(_txt,'변수\|(.+?)\|(.+?)') { // 추가
							EVAL("%(RE_GETSTR[1])=%(CHR(34))%(RE_GETSTR[2])%(CHR(34))")
						}
					}
					else {
						if _half_menu_flag {
							_script += 반쪽메뉴종료()
							_half_menu_flag = 0
						}
						if _menu_flag {
							if _quick == 0 {
								_script += '\_q'
							}
							_script += '\_n'
							_menu_flag = 0
						}
						
						_main = _txt_orig
						_cmd = _cmd_orig
						
						_cmd_wait = _cmd
						_cmd = REPLACE(_cmd,'대기없음','')
						_cmd = REPLACE(_cmd,'안기다림','')
						_cmd = REPLACE(_cmd,'바로','')
						_cmd_wait = (_cmd != _cmd_wait)
						
						_cmd_waitzero = _cmd
						_cmd = REPLACE(_cmd,'대기제로','')
						_cmd = REPLACE(_cmd,'대기0','')
						_cmd_waitzero = (_cmd != _cmd_waitzero)

						_cmd_morewait = _cmd
						_cmd = REPLACE(_cmd,'대기많이','')
//						_cmd = REPLACE(_cmd,'대기많이','')
						_cmd = REPLACE(_cmd,'대기8','')
						_cmd_morewait = (_cmd != _cmd_morewait)
						
						_cmd_line = _cmd
						_cmd = REPLACE(_cmd,'개행없음','')
						_cmd = REPLACE(_cmd,'이어서','')
						_cmd = REPLACE(_cmd,'개행안함','')
						_cmd_line = (_cmd != _cmd_line)
						
						_cmd_moreline = _cmd
						_cmd = REPLACE(_cmd,'개행많이','')
//						_cmd = REPLACE(_cmd,'改行多目','')
						_cmd = REPLACE(_cmd,'개많','')
						_cmd_moreline = (_cmd != _cmd_moreline)
						
						_cmd_click = _cmd
						_cmd = REPLACE(_cmd,'클릭대기','')
						_cmd_click = (_cmd != _cmd_click)
						
						_cmd_before = _cmd
						_cmd = REPLACE(_cmd,'개행전','')
						_cmd_before = (_cmd != _cmd_before)
						
						_side_change = ''
						_side_wait = ''
						_side_wait_short = ''
						
						if _talk_init != 0 {
							if _cmd_click {
								_talk_done_side = IARRAY
								_talk_init = 0
								_side_wait += '\0\x'
								_side = 0
								_side_old = 0
							}
							elseif _quick == 0 {
								if _cmd_waitzero {
									; //NOOP
								}
								elseif _cmd_wait { //대기없음
									_side_wait += "\w3"
									_side_wait_short += "\w2"
								}
								elseif _cmd_morewait { //대기많이
									_side_wait += "\w9\w9\w9\w9"
									_side_wait_short += "\w9\w9"
								}
								else { //일반 대기
									_side_wait += "\w9\w9"
									_side_wait_short += "\w9"
								}
							}
						}
						
						_surface_defined_flag = 0
						while 1 {
							_pattern_found = 0
							
							_patnum = ARRAYSIZE(AYLex_CHAR_HEADER)
							for _pat = 0 ; _pat < _patnum ; _pat++ {
								if STRLEN(AYLex_CHAR_HEADER[_pat]) {
									if RE_SEARCH(_cmd,'^' + AYLex_CHAR_HEADER[_pat] + '([0-9\.,０-９．，消bｂバ숨]*)') {
										_pattern_found = 1
										_side = _pat
										if _sync {
											_sync = 0
											_side_change += '\_s'
											_talk_done_side[0] = 1
											_talk_done_side[1] = 1
										}
										_cmd = ERASE(_cmd,0,RE_GETLEN[0])
										if _side < 2 {
											_side_change += "\%(_side)"
										}
										else {
											_side_change += "\p[%(_side)]"
										}
										
										_spat = RE_GETSTR[1]
										if _spat != '' {
											_talk_init_side[_side] = 1
											
											_spat_a = RE_SPLIT(_spat,'[\.．,，bｂバ]',3)
											_spat_s = RE_GETSTR()
											
											if '숨' _in_ _spat_a[0] {
												_side_change += "\s[-1]"
											}
											elseif _spat_a[0] != '' {
												_surface = TOINT(ZEN2HAN(_spat_a[0]))
												if _surface_translate_found {
													_surface_x = EVAL("%(_surface_translate_name)(_side,_surface)")
													if STRLEN(TOSTR(_surface_x)) {
														_surface = _surface_x
													}
												}
												_side_change += "\s[%(_surface)]"
											}
											
											for _k = 1 ; _k < 3 ; _k++ {
												if _spat_a[_k] != '' {
													if RE_MATCH(_spat_s[_k-1],'[bｂバ]') {
														if '숨' _in_ _spat_a[_k] {
															_side_change += "\b[-1]"
														}
														elseif _spat_a[_k] != '' {
															_side_change += "\b[%(TOINT(ZEN2HAN(_spat_a[_k])))]"
														}
													}
													else {
														if _spat_a[_k] != '' {
															_side_change += "\i[%(TOINT(ZEN2HAN(_spat_a[_k])))]"
														}
													}
												}
											}
											
											_surface_defined_flag = 1
										}
									}
								}
							}

							if _pattern_found {
								//NOOP - 루프 내 실행 완료
							}
							elseif (SUBSTR(_cmd,0,2) == '함께') {
								_cmd = ERASE(_cmd,0,2)
								if _sync == 0 {
									_sync = 1
									_side_change += '\_s'
								}
							}
							else {
								break
							}
						}
						
						_side_changed_flag = _side_old != _side
						if TOINT(_talk_done_side[_side]) != 0 {
							if _cmd_line == 0 {
								if _side_changed_flag {
									if _cmd_moreline {
										_side_change += "\n\n"
									}
									else {
										_side_change += "\n\n[half]"
									}
								}
								else {
									if _cmd_moreline {
										_side_change += "\n\n[half]"
									}
									else {
										_side_change += "\n"
									}
								}
							}
						}
						_side_old = _side
						
						if _talk_init == 0 {
							if TOINT(_talk_init_side[0]) == 0 {
								_init_script = "\0\s[%(AYLex_DEFAULT_SURFACE[0])]"
							}
							elseif TOINT(_talk_init_side[1]) == 0 {
								_init_script = "\1\s[%(AYLex_DEFAULT_SURFACE[1])]\0"
							}
						}
						
						if (_surface_defined_flag == 0) && (_side_changed_flag == 0) {
							_side_wait = _side_wait_short
						}
						
						if _cmd_before {
							_script += _side_change
							_script += _side_wait
						}
						else {
							_script += _side_wait
							_script += _side_change
						}
						
						_talk = ProcessAYALilithSyntaxSub(_main,_quick)
						if _talk != '' {
							_talk_done_side[_side] = 1
							_script += _talk
						}
						_talk_init = 1
					}
				}
			}
			else {
				_else_cond_result = 0
				
				if _quick == 0 {
					_script += "\w9"
				}
				if _kagikakko_flag {
					if RE_SEARCH(_txt,'^(.+?)[」｣]$') {
						_txt = RE_GETSTR[1]
						_kagikakko_flag = 0
					}
				}
				_script += "\n";
				_script += ProcessAYALilithSyntaxSub(_txt,_quick)
			}
			
			if entering_passive_mode != 0 {
				if _passive_set == 0 {
					_script += '\![leave,passivemode]'
					entering_passive_mode = 0
				}
			}
			
		}
	}

	if _is_exit {
		_script += "\w9\-";
	}
	
	if _timeout_value {
		_script = "\![set,balloontimeout,%(_timeout_value)]\![set,choicetimeout,%(_timeout_value)]" + _script
	}
	//이것이 반드시 마지막
	if _init_script != '' {
		_script = _init_script + _script
	}
	_script
}

//---- 조건 분기 --------------------------------------------------------------
ProcessAYALilithCondBranch
{
	_t = _argv[0]
	_t = RE_REPLACE(_t,'[【】]','')
	
	if STRLEN(_t) == 0 {
		1
		return
	}
	
	_t = ReplaceAbbrevSyntax(_t,'[RＲ]','reference')
	_t = ReplaceAbbrevSyntax(_t,'[AＡ]','_argv')

	TOINT(EVAL(_t)) != 0
}

ReplaceAbbrevSyntax
{
	_ta = RE_SPLIT(_argv[0],_argv[1] + '[0-9０-９]+')
	_tr = RE_GETSTR()
	
	_n = ARRAYSIZE(_ta)
	_t = _ta[0]
	
	_res = ''
	for _i = 1 ; _i < _n ; _i++ {
		_res = _tr[_i-1]
		_res = RE_REPLACE(_res,_argv[1],'')
		
		_res = _argv[2] + '[' + TOINT(ZEN2HAN(_res)) + ']'
		
		_t += _res
		
		_t += _ta[_i]
	}
	_t
}

//---- 테스트용 이벤트 --------------------------------------------------------------
OnTextDrop
{
	REPLACE(reference.raw[0],CHR(1),CHR(0xd,0xa))
}

//---- 메뉴계 --------------------------------------------------------------

//이스케이프
이스케이프
{
	_r = _argv[0]
	_r = REPLACE(_r,', ','，') // 추가
	_r = REPLACE(_r,',','，') // 추가
	if RE_SEARCH(_r,'["\[\]]') {
		'"' + REPLACE(_r,'"','""') + '"'
	}
	else {
		_r
	}
}

HTML이스케이프
{
	_r = _argv[0]
	_r = REPLACE(_r,'&','&amp;')
	_r = REPLACE(_r,'<','&lt;')
	_r = REPLACE(_r,'>','&gt;')
	_r = REPLACE(_r,'"','&quot;')
	_r
}

//일반 메뉴
메뉴
{
	'\![*]\q['
	--
	이스케이프( SHIORI3FW.MakeJustText(_argv[0],아야리리스EX메뉴당문자수) ) // 이스케이프( SHIORI3FW.MakeJustText(_argv[0],46) )
	--
	_n = ARRAYSIZE(_argv)
	_s = ''
	for _i = 1 ; _i < _n ; _i++ {
		_s += ',' + 이스케이프(_argv[_i])
	}
	_s
	--
	']'
}

//반쪽메뉴
반쪽메뉴시작
{
	half_menu_counter = 0
}
반쪽메뉴초기화
{
	half_menu_counter = 0
}

반쪽메뉴종료
{
	if 반쪽메뉴무효 {
		''
		return
	}
	if half_menu_counter != 0 {
		'\n'
	}
}
반쪽메뉴
{
	if 반쪽메뉴무효 {
		메뉴(_argv) + '\n'
		return
	}
	
	if (half_menu_counter % 2) == 0 {
		if half_menu_counter != 0 {
			'\n'
		}
	}
	--
	'\![*]\q['
	--
	이스케이프( SHIORI3FW.MakeJustText(_argv[0],아야리리스EX반쪽메뉴당문자수) ) // 이스케이프( SHIORI3FW.MakeJustText(_argv[0],21) )
	--
	_n = ARRAYSIZE(_argv)
	_s = ''
	for _i = 1 ; _i < _n ; _i++ {
		_s += ',' + 이스케이프(_argv[_i])
	}
	_s
	--
	']'
	--
	if (half_menu_counter % 2) == 0 {
		'\_l[' + 아야리리스EX반쪽메뉴오른쪽시작위치 + ']'
	}
	half_menu_counter++
}
